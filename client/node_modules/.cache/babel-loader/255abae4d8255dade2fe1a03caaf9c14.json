{"ast":null,"code":"// import {authAPI} from \"../Api/api\";\n//\n// const SET_USER_DATA = \"auth/SET_USER_DATA\"\n//\n// let initialState = {\n//     userId: null,\n//     token: null,\n//     isAuth: false,\n//     email: null,\n//     login: null,\n// }\n//\n//\n// const authReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case SET_USER_DATA: {\n//             return {\n//                 ...state,\n//                 ...action.payload\n//             }\n//         }\n//         default: return state\n//     }\n// }\n//\n//\n// export const setUserData = (auth, userId, token, email, login) => ({\n//     type: SET_USER_DATA, payload: {userId, isAuth: auth, token, email, login}\n// })\n//\n//\n// export const loginUser = (em, password) => async (dispatch) => {\n//     try {\n//         const response = await authAPI.login(em, password)\n//         if (response.status === 200) {\n//             const {userId, token, email} = response.data\n//             dispatch(setUserData(true, userId, token, email))\n//         }\n//     }catch (e) {\n//         console.log(e.response)\n//     }\n// }\n//\n// export default authReducer;","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Redux/auth-reducer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import {authAPI} from \"../Api/api\";\r\n//\r\n// const SET_USER_DATA = \"auth/SET_USER_DATA\"\r\n//\r\n// let initialState = {\r\n//     userId: null,\r\n//     token: null,\r\n//     isAuth: false,\r\n//     email: null,\r\n//     login: null,\r\n// }\r\n//\r\n//\r\n// const authReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case SET_USER_DATA: {\r\n//             return {\r\n//                 ...state,\r\n//                 ...action.payload\r\n//             }\r\n//         }\r\n//         default: return state\r\n//     }\r\n// }\r\n//\r\n//\r\n// export const setUserData = (auth, userId, token, email, login) => ({\r\n//     type: SET_USER_DATA, payload: {userId, isAuth: auth, token, email, login}\r\n// })\r\n//\r\n//\r\n// export const loginUser = (em, password) => async (dispatch) => {\r\n//     try {\r\n//         const response = await authAPI.login(em, password)\r\n//         if (response.status === 200) {\r\n//             const {userId, token, email} = response.data\r\n//             dispatch(setUserData(true, userId, token, email))\r\n//         }\r\n//     }catch (e) {\r\n//         console.log(e.response)\r\n//     }\r\n// }\r\n//\r\n// export default authReducer;"]},"metadata":{},"sourceType":"module"}