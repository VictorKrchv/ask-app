{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\QuestionPage\\\\QuestionPage.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getQuestionData } from \"../../Redux/question-reducer\";\nimport { Question } from \"./Question\";\nimport { AnswersList } from \"./Answers/AnswersList\";\nimport { QuestionForm } from \"./QuestionForm\";\nimport Loader from \"../Loader\";\nexport const QuestionPage = React.memo(function QuestionPage(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const id = useParams().id;\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    await dispatch(getQuestionData(id));\n    setIsLoading(false);\n  }, [dispatch]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const question = useSelector(state => state.question.question);\n  const answers = useSelector(state => state.question.answers);\n  console.log('render');\n\n  const postComment = value => {\n    console.log(value);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    text: question.text,\n    title: question.title,\n    likes: question.likes,\n    author: question.author,\n    date: question.date,\n    answers: answers.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(QuestionForm, {\n    postComment: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AnswersList, {\n    answers: answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/QuestionPage/QuestionPage.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","useParams","getQuestionData","Question","AnswersList","QuestionForm","Loader","QuestionPage","memo","props","isLoading","setIsLoading","dispatch","id","fetchData","question","state","answers","console","log","postComment","value","text","title","likes","author","date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,YAAY,GAAGZ,KAAK,CAACa,IAAN,CAAW,SAASD,YAAT,CAAsBE,KAAtB,EAA6B;AAEhE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,EAAE,GAAGZ,SAAS,GAAGY,EAAvB;AAEA,QAAMC,SAAS,GAAGlB,WAAW,CAAC,YAAW;AACrCe,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMC,QAAQ,CAACV,eAAe,CAACW,EAAD,CAAhB,CAAd;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAJ4B,EAI1B,CAACC,QAAD,CAJ0B,CAA7B;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,QAAMC,QAAQ,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeA,QAAzB,CAA5B;AACA,QAAME,OAAO,GAAGjB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,OAAzB,CAA3B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,GAFD;;AAIA,MAAGX,SAAH,EAAc;AACV,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEK,QAAQ,CAACO,IAAzB;AAA+B,IAAA,KAAK,EAAEP,QAAQ,CAACQ,KAA/C;AAAsD,IAAA,KAAK,EAAER,QAAQ,CAACS,KAAtE;AAA6E,IAAA,MAAM,EAAET,QAAQ,CAACU,MAA9F;AACU,IAAA,IAAI,EAAEV,QAAQ,CAACW,IADzB;AAC+B,IAAA,OAAO,EAAET,OAAO,CAACU,MADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAKI,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEP,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAOI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAYH,CAxC2B,CAArB","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport {getQuestionData} from \"../../Redux/question-reducer\";\r\nimport {Question} from \"./Question\";\r\nimport {AnswersList} from \"./Answers/AnswersList\";\r\nimport {QuestionForm} from \"./QuestionForm\";\r\nimport Loader from \"../Loader\";\r\n\r\nexport const QuestionPage = React.memo(function QuestionPage(props) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const id = useParams().id\r\n\r\n    const fetchData = useCallback(async() => {\r\n        setIsLoading(true)\r\n        await dispatch(getQuestionData(id))\r\n        setIsLoading(false)\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n\r\n    const question = useSelector(state => state.question.question)\r\n    const answers = useSelector(state => state.question.answers)\r\n\r\n    console.log('render')\r\n    const postComment = (value) => {\r\n        console.log(value)\r\n    }\r\n\r\n    if(isLoading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n\r\n            <Question text={question.text} title={question.title} likes={question.likes} author={question.author}\r\n                      date={question.date} answers={answers.length}/>\r\n\r\n            <QuestionForm postComment={postComment}/>\r\n\r\n            <AnswersList answers={answers}/>\r\n\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}