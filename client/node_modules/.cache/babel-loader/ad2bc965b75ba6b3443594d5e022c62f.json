{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\QuestionPage\\\\QuestionPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getQuestionData } from \"../../Redux/question-reducer\";\nimport { Question } from \"./Question\";\nimport { Answer } from \"./Answers/Answer\";\nimport Loader from \"../Loader\";\nimport { AnswersList } from \"./Answers/AnswersList\";\nimport { QuestionForm } from \"./QuestionForm\";\nexport const QuestionPage = React.memo(function QuestionPage(props) {\n  const dispatch = useDispatch();\n  const id = useParams().id;\n  useEffect(() => {\n    dispatch(getQuestionData(id));\n  }, [id]);\n  const question = useSelector(state => state.question.question);\n  const answers = useSelector(state => state.question.answers);\n  const isLoadingQuestion = useSelector(state => state.question.isLoadingQuestion);\n  const isLoadingAnswers = useSelector(state => state.question.isLoadingAnswers); // const onSubmit = (e) => {\n  //     e.preventDefault()\n  //     setValue('')\n  // }\n\n  if (isLoadingQuestion) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    text: question.text,\n    title: question.title,\n    likes: question.likes,\n    author: question.author,\n    date: question.date,\n    answers: answers.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(QuestionForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), !isLoadingAnswers && /*#__PURE__*/React.createElement(AnswersList, {\n    answers: answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 35\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/QuestionPage/QuestionPage.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","getQuestionData","Question","Answer","Loader","AnswersList","QuestionForm","QuestionPage","memo","props","dispatch","id","question","state","answers","isLoadingQuestion","isLoadingAnswers","text","title","likes","author","date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAGZ,KAAK,CAACa,IAAN,CAAW,SAASD,YAAT,CAAsBE,KAAtB,EAA8B;AAEjE,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,EAAE,GAAGX,SAAS,GAAGW,EAAvB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACT,eAAe,CAACU,EAAD,CAAhB,CAAR;AACH,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAIA,QAAMC,QAAQ,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeA,QAAzB,CAA5B;AACA,QAAME,OAAO,GAAGf,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,OAAzB,CAA3B;AACA,QAAMC,iBAAiB,GAAGhB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeG,iBAAzB,CAArC;AACA,QAAMC,gBAAgB,GAAGjB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeI,gBAAzB,CAApC,CAZiE,CAkBjE;AACA;AACA;AACA;;AAEA,MAAID,iBAAJ,EAAuB;AACnB,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEH,QAAQ,CAACK,IAAzB;AAA+B,IAAA,KAAK,EAAEL,QAAQ,CAACM,KAA/C;AAAsD,IAAA,KAAK,EAAEN,QAAQ,CAACO,KAAtE;AAA6E,IAAA,MAAM,EAAEP,QAAQ,CAACQ,MAA9F;AAAsG,IAAA,IAAI,EAAER,QAAQ,CAACS,IAArH;AAA2H,IAAA,OAAO,EAAEP,OAAO,CAACQ,MAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMK,CAACN,gBAAD,iBAAqB,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN1B,CADJ;AAWH,CAtC2B,CAArB","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport {getQuestionData} from \"../../Redux/question-reducer\";\r\nimport {Question} from \"./Question\";\r\nimport {Answer} from \"./Answers/Answer\";\r\nimport Loader from \"../Loader\";\r\nimport {AnswersList} from \"./Answers/AnswersList\";\r\nimport {QuestionForm} from \"./QuestionForm\";\r\n\r\nexport const QuestionPage = React.memo(function QuestionPage(props)  {\r\n\r\n    const dispatch = useDispatch()\r\n    const id = useParams().id\r\n\r\n    useEffect(() => {\r\n        dispatch(getQuestionData(id))\r\n    }, [id])\r\n\r\n    const question = useSelector(state => state.question.question)\r\n    const answers = useSelector(state => state.question.answers)\r\n    const isLoadingQuestion = useSelector(state => state.question.isLoadingQuestion)\r\n    const isLoadingAnswers = useSelector(state => state.question.isLoadingAnswers)\r\n\r\n\r\n\r\n\r\n\r\n    // const onSubmit = (e) => {\r\n    //     e.preventDefault()\r\n    //     setValue('')\r\n    // }\r\n\r\n    if (isLoadingQuestion) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n\r\n            <Question text={question.text} title={question.title} likes={question.likes} author={question.author} date={question.date} answers={answers.length} />\r\n\r\n            <QuestionForm/>\r\n\r\n            {!isLoadingAnswers && <AnswersList answers={answers} />}\r\n\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}