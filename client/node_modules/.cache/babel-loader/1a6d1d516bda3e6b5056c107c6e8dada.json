{"ast":null,"code":"import { authAPI } from \"../Api/api\";\nconst SET_ERROR = \"SET_ERROR\";\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\nlet initialState = {\n  userId: null,\n  token: null,\n  isAuth: false,\n  email: null,\n  login: null,\n  error: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ERROR:\n      {\n        return { ...state,\n          error: action.err\n        };\n      }\n\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (auth, userId, token, email, login) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    auth,\n    token,\n    email,\n    login\n  }\n});\n\nconst setError = err => ({\n  type: SET_ERROR,\n  err\n});\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Redux/auth-reducer.js"],"names":["authAPI","SET_ERROR","SET_USER_DATA","initialState","userId","token","isAuth","email","login","error","authReducer","state","action","type","err","payload","setUserData","auth","setError"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,aAAa,GAAG,oBAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,MAAM,EAAE,KAHO;AAIfC,EAAAA,KAAK,EAAE,IAJQ;AAKfC,EAAAA,KAAK,EAAE,IALQ;AAMfC,EAAAA,KAAK,EAAE;AANQ,CAAnB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGU,KADA;AAEHF,UAAAA,KAAK,EAAEG,MAAM,CAACE;AAFX,SAAP;AAIH;;AACD,SAAKZ,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGS,KADA;AAEH,aAAGC,MAAM,CAACG;AAFP,SAAP;AAIH;;AACD;AAAS,aAAOJ,KAAP;AAbb;AAeH,CAhBD;;AAmBA,OAAO,MAAMK,WAAW,GAAG,CAACC,IAAD,EAAOb,MAAP,EAAeC,KAAf,EAAsBE,KAAtB,EAA6BC,KAA7B,MAAwC;AAC/DK,EAAAA,IAAI,EAAEX,aADyD;AAC1Ca,EAAAA,OAAO,EAAE;AAACX,IAAAA,MAAD;AAASa,IAAAA,IAAT;AAAeZ,IAAAA,KAAf;AAAsBE,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B;AADiC,CAAxC,CAApB;;AAIP,MAAMU,QAAQ,GAAGJ,GAAG,KAAK;AACrBD,EAAAA,IAAI,EAAEZ,SADe;AACJa,EAAAA;AADI,CAAL,CAApB;;AAKA,eAAeJ,WAAf","sourcesContent":["import {authAPI} from \"../Api/api\";\r\n\r\nconst SET_ERROR = \"SET_ERROR\"\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\"\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    token: null,\r\n    isAuth: false,\r\n    email: null,\r\n    login: null,\r\n    error: null\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.err\r\n            }\r\n        }\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const setUserData = (auth, userId, token, email, login) => ({\r\n    type: SET_USER_DATA, payload: {userId, auth, token, email, login}\r\n})\r\n\r\nconst setError = err => ({\r\n    type: SET_ERROR, err\r\n})\r\n\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}