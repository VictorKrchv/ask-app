{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\QuestionPage\\\\QuestionPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport getData from \"../../utils/getData\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getQuestionData } from \"../../Redux/question-reducer\";\nimport { Question } from \"./Question\";\nexport const QuestionPage = () => {\n  const dispatch = useDispatch();\n  const id = useParams().id;\n  useEffect(() => {\n    dispatch(getQuestionData(id));\n  }, [id]);\n  const question = useSelector(state => state.question.question);\n  console.log(question);\n  const answers = useSelector(state => state.question.answers);\n  const [value, setValue] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setAnswers([...answers, {\n      author: \"author\",\n      date: new Date(),\n      likes: 0,\n      text: value\n    }]);\n    setValue('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    text: question.text,\n    title: question.title,\n    likes: question.likes,\n    author: question.author,\n    date: question.date,\n    answers: answers.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"question-form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Answer the question\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://via.placeholder.com/50\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    placeholder: \"Write your answer here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Send answer\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answers-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Answers(3):\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), answers.map((answer, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers__item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers__item-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, answer.author, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 48\n      }\n    }, \" at \", getData(answer.date))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"answers__item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, answer.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers__item-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, \"Likes: \", answer.likes)));\n  })));\n};","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/QuestionPage/QuestionPage.js"],"names":["React","useEffect","useState","getData","useDispatch","useSelector","useParams","getQuestionData","Question","QuestionPage","dispatch","id","question","state","console","log","answers","value","setValue","onSubmit","e","preventDefault","setAnswers","author","date","Date","likes","text","title","length","target","map","answer","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport getData from \"../../utils/getData\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport {getQuestionData} from \"../../Redux/question-reducer\";\r\nimport {Question} from \"./Question\";\r\n\r\nexport const QuestionPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const id = useParams().id\r\n\r\n    useEffect(() => {\r\n        dispatch(getQuestionData(id))\r\n    }, [id])\r\n\r\n    const question = useSelector(state => state.question.question)\r\n    console.log(question)\r\n    const answers = useSelector(state => state.question.answers)\r\n\r\n\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        setAnswers([...answers,\r\n            {\r\n                author: \"author\",\r\n                date: new Date(),\r\n                likes: 0,\r\n                text: value,\r\n            }\r\n        ])\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n\r\n            <Question text={question.text} title={question.title} likes={question.likes} author={question.author} date={question.date} answers={answers.length} />\r\n\r\n            <form action=\"\" className=\"question-form\" onSubmit={onSubmit}>\r\n                <div className=\"question-form__title\">\r\n                    <h3>Answer the question</h3>\r\n                </div>\r\n                <div className=\"question-form__content\">\r\n                    \r\n                    <div className=\"question-form__img\">\r\n                        <img src=\"https://via.placeholder.com/50\" alt=\"\"/>\r\n                    </div>\r\n                    \r\n                    <div className=\"question-form__input\" >\r\n                        <textarea type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Write your answer here\"/>\r\n                        <button className=\"btn\" type={\"submit\"}>Send answer</button>\r\n                    </div>\r\n                </div>\r\n               \r\n            </form>\r\n\r\n            <div className=\"answers\">\r\n                <div className=\"answers-title\">\r\n                    <h3>Answers(3):</h3>\r\n                </div>\r\n                <hr/>\r\n\r\n                {answers.map((answer, index) => {\r\n                    return (\r\n                        <div className=\"answers__item\" key={index}>\r\n                            <div className=\"answers__item-title\">\r\n                                {answer.author}<span> at {getData(answer.date)}</span>\r\n                            </div>\r\n                            <p className=\"answers__item-text\">{answer.text}</p>\r\n                            <div className=\"answers__item-footer\">\r\n                                <span>Likes: {answer.likes}</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}