{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\MainPage\\\\MainPage.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Question from \"./Question\";\nimport { fetchDeleteQuestion, getQuestions } from \"../../Redux/questions-reducer\";\nexport const MainPage = () => {\n  const questions = useSelector(state => state.questions.questions);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getQuestions());\n  }, [dispatch]);\n\n  const deleteQuestion = id => {\n    dispatch(fetchDeleteQuestion(id));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, questions.map((question, index) => {\n    return /*#__PURE__*/React.createElement(Question, {\n      key: index,\n      id: question.id,\n      title: question.title,\n      author: question.author.email,\n      answers: question.answers,\n      text: question.text,\n      date: question.date,\n      likes: question.likes,\n      fetchDeleteQuestion: deleteQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/MainPage/MainPage.js"],"names":["React","useEffect","useDispatch","useSelector","Question","fetchDeleteQuestion","getQuestions","MainPage","questions","state","dispatch","deleteQuestion","id","map","question","index","title","author","email","answers","text","date","likes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,mBAAR,EAA6BC,YAA7B,QAAgD,+BAAhD;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE1B,QAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,SAAN,CAAgBA,SAA1B,CAA7B;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACH,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;;AAIA,QAAMC,cAAc,GAAIC,EAAD,IAAQ;AAC3BF,IAAAA,QAAQ,CAACL,mBAAmB,CAACO,EAAD,CAApB,CAAR;AACH,GAFD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,SAAS,CAACK,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAChC,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,EAAE,EAAED,QAAQ,CAACF,EAAnC;AAAuC,MAAA,KAAK,EAAEE,QAAQ,CAACE,KAAvD;AAA8D,MAAA,MAAM,EAAEF,QAAQ,CAACG,MAAT,CAAgBC,KAAtF;AACU,MAAA,OAAO,EAAEJ,QAAQ,CAACK,OAD5B;AAEU,MAAA,IAAI,EAAEL,QAAQ,CAACM,IAFzB;AAE+B,MAAA,IAAI,EAAEN,QAAQ,CAACO,IAF9C;AAEoD,MAAA,KAAK,EAAEP,QAAQ,CAACQ,KAFpE;AAGU,MAAA,mBAAmB,EAAEX,cAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH,GAPA,CADL,CADJ,CADJ;AAcH,CA9BM","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Question from \"./Question\";\r\nimport {fetchDeleteQuestion, getQuestions} from \"../../Redux/questions-reducer\";\r\n\r\nexport const MainPage = () => {\r\n\r\n    const questions = useSelector(state => state.questions.questions)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getQuestions())\r\n    }, [dispatch])\r\n\r\n    const deleteQuestion = (id) => {\r\n        dispatch(fetchDeleteQuestion(id))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main-inner\">\r\n                {questions.map((question, index) => {\r\n                    return (\r\n                        <Question key={index} id={question.id} title={question.title} author={question.author.email}\r\n                                  answers={question.answers}\r\n                                  text={question.text} date={question.date} likes={question.likes}\r\n                                  fetchDeleteQuestion={deleteQuestion}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}