{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\QuestionPage\\\\QuestionPage.js\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getQuestionData } from \"../../Redux/question-reducer\";\nimport { Question } from \"./Question\";\nimport { AnswersList } from \"./Answers/AnswersList\";\nimport { QuestionForm } from \"./QuestionForm\";\nexport const QuestionPage = React.memo(function QuestionPage(props) {\n  const dispatch = useDispatch();\n  const id = useParams().id;\n  const fetchData = useCallback(async () => {\n    dispatch(getQuestionData(id));\n  }, [id, dispatch]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const questionState = useSelector(state => state.question);\n\n  const postComment = value => {\n    console.log(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    text: questionState.question.text,\n    title: questionState.question.title,\n    likes: questionState.question.likes,\n    author: questionState.question.author,\n    date: questionState.question.date,\n    answers: questionState.answers.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(QuestionForm, {\n    postComment: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AnswersList, {\n    answers: questionState.answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/QuestionPage/QuestionPage.js"],"names":["React","useCallback","useEffect","useDispatch","useSelector","useParams","getQuestionData","Question","AnswersList","QuestionForm","QuestionPage","memo","props","dispatch","id","fetchData","questionState","state","question","postComment","value","console","log","text","title","likes","author","date","answers","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAGV,KAAK,CAACW,IAAN,CAAW,SAASD,YAAT,CAAsBE,KAAtB,EAA6B;AAEhE,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,EAAE,GAAGT,SAAS,GAAGS,EAAvB;AAEA,QAAMC,SAAS,GAAGd,WAAW,CAAC,YAAY;AACtCY,IAAAA,QAAQ,CAACP,eAAe,CAACQ,EAAD,CAAhB,CAAR;AACH,GAF4B,EAE1B,CAACA,EAAD,EAAKD,QAAL,CAF0B,CAA7B;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAMA,QAAMC,aAAa,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAjC;;AAGA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,aAAa,CAACE,QAAd,CAAuBK,IAAvC;AAA6C,IAAA,KAAK,EAAEP,aAAa,CAACE,QAAd,CAAuBM,KAA3E;AACU,IAAA,KAAK,EAAER,aAAa,CAACE,QAAd,CAAuBO,KADxC;AAC+C,IAAA,MAAM,EAAET,aAAa,CAACE,QAAd,CAAuBQ,MAD9E;AAEU,IAAA,IAAI,EAAEV,aAAa,CAACE,QAAd,CAAuBS,IAFvC;AAE6C,IAAA,OAAO,EAAEX,aAAa,CAACY,OAAd,CAAsBC,MAF5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEV,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,aAAa,CAACY,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH,CA/B2B,CAArB","sourcesContent":["import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport {getQuestionData} from \"../../Redux/question-reducer\";\r\nimport {Question} from \"./Question\";\r\nimport {AnswersList} from \"./Answers/AnswersList\";\r\nimport {QuestionForm} from \"./QuestionForm\";\r\n\r\nexport const QuestionPage = React.memo(function QuestionPage(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const id = useParams().id\r\n\r\n    const fetchData = useCallback(async () => {\r\n        dispatch(getQuestionData(id))\r\n    }, [id, dispatch])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n    \r\n\r\n\r\n    const questionState = useSelector(state => state.question)\r\n\r\n\r\n    const postComment = (value) => {\r\n        console.log(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            <Question text={questionState.question.text} title={questionState.question.title}\r\n                      likes={questionState.question.likes} author={questionState.question.author}\r\n                      date={questionState.question.date} answers={questionState.answers.length}/>\r\n            <QuestionForm postComment={postComment}/>\r\n            <AnswersList answers={questionState.answers}/>\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}