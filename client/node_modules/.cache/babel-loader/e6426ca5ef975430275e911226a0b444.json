{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\AuthPage\\\\AuthPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAuth } from \"../../Hooks/auth-hook\";\nimport { loginUser, registerUser } from \"../../Redux/auth-reducer\";\nimport Button from \"react-bootstrap/Button\";\nimport { Form } from \"react-bootstrap\";\nimport Alert from \"react-bootstrap/Alert\";\nexport const AuthPage = () => {\n  const history = useHistory();\n  const id = useParams().id;\n  const dispatch = useDispatch();\n  const {\n    login\n  } = useAuth();\n  const isAuth = useSelector(state => state.auth.isAuth);\n\n  if (isAuth) {\n    history.push('/');\n  }\n\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    repassword: ''\n  });\n  const [message, setMessage] = useState({\n    error: null,\n    message: ''\n  });\n\n  const changeHandler = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    setForm({\n      email: '',\n      password: '',\n      repassword: ''\n    });\n  }, [id]);\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    dispatch(registerUser(form.email, form.password)); // try {\n    //     e.preventDefault()\n    //     let response = await axios.post('/api/auth/register', {email: form.email, password: form.password})\n    //     history.push(\"/auth/login\")\n    //     setMessage({error: false, message: response.data.message})\n    //     setForm({email: '', password: '', repassword: ''})\n    // } catch (e) {\n    //     setMessage({error: true, message: e.response.data.message})\n    // }\n  };\n\n  const loginHandler = async e => {\n    e.preventDefault();\n    let {\n      message,\n      error\n    } = await dispatch(loginUser(form.email, form.password));\n    setMessage({\n      message,\n      error\n    });\n  };\n\n  if (id === \"login\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 26\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }\n    }, \"No account?\"))), message.message && /*#__PURE__*/React.createElement(Alert, {\n      variant: !message.error ? 'success' : 'danger',\n      onClose: () => setMessage({\n        error: null,\n        message: null\n      }),\n      dismissible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }\n    }, message.error && /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 39\n      }\n    }, \"Oh snap! You got an error!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, message.message)), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: loginHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      onChange: changeHandler,\n      value: form.email,\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password\",\n      onChange: changeHandler,\n      value: form.password,\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  } else if (id === \"register\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 26\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 26\n      }\n    }, \"Have an account?\"))), message.message && /*#__PURE__*/React.createElement(Alert, {\n      variant: !message.error ? 'success' : 'danger',\n      onClose: () => setMessage({\n        error: null,\n        message: null\n      }),\n      dismissible: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Alert.Heading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"Oh snap! You got an error!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, message.message)), /*#__PURE__*/React.createElement(Form, {\n      action: \"\",\n      onSubmit: registerHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      onChange: changeHandler,\n      value: form.email,\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password\",\n      onChange: changeHandler,\n      value: form.password,\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Register\")));\n  }\n};","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/AuthPage/AuthPage.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","useDispatch","useSelector","useAuth","loginUser","registerUser","Button","Form","Alert","AuthPage","history","id","dispatch","login","isAuth","state","auth","push","form","setForm","email","password","repassword","message","setMessage","error","changeHandler","e","target","name","value","registerHandler","preventDefault","loginHandler"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Link, useHistory, useParams} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAuth} from \"../../Hooks/auth-hook\";\r\nimport {loginUser, registerUser} from \"../../Redux/auth-reducer\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\n\r\nexport const AuthPage = () => {\r\n\r\n\r\n    const history = useHistory()\r\n    const id = useParams().id\r\n    const dispatch = useDispatch()\r\n    const {login} = useAuth()\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n    if (isAuth) {\r\n        history.push('/')\r\n    }\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: '',\r\n        repassword: ''\r\n    })\r\n\r\n    const [message, setMessage] = useState({error: null, message: ''})\r\n\r\n\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        setForm({email: '', password: '', repassword: ''})\r\n    }, [id])\r\n\r\n    const registerHandler = async (e) => {\r\n        e.preventDefault()\r\n        dispatch(registerUser(form.email, form.password))\r\n        // try {\r\n        //     e.preventDefault()\r\n        //     let response = await axios.post('/api/auth/register', {email: form.email, password: form.password})\r\n        //     history.push(\"/auth/login\")\r\n        //     setMessage({error: false, message: response.data.message})\r\n        //     setForm({email: '', password: '', repassword: ''})\r\n        // } catch (e) {\r\n        //     setMessage({error: true, message: e.response.data.message})\r\n        // }\r\n    }\r\n\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault()\r\n        let {message, error} = await dispatch(loginUser(form.email, form.password))\r\n        setMessage({message, error})\r\n    }\r\n\r\n\r\n    if (id === \"login\") {\r\n        return (\r\n\r\n            <div className=\"auth\">\r\n                <div className=\"auth-title\">\r\n                    <div><h3>Login</h3></div>\r\n                    <div><Link to=\"/auth/register\">No account?</Link></div>\r\n                </div>\r\n                {message.message\r\n                && <Alert variant={!message.error ? 'success' : 'danger'} onClose={() => setMessage({error: null, message:null})} dismissible>\r\n                    {message.error && <Alert.Heading>Oh snap! You got an error!</Alert.Heading>}\r\n                    <p>\r\n                        {message.message}\r\n                    </p>\r\n                </Alert>\r\n                }\r\n\r\n                <Form onSubmit={loginHandler}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control name=\"email\" onChange={changeHandler} value={form.email} type=\"email\"\r\n                                      placeholder=\"Enter email\"/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name=\"password\" onChange={changeHandler} value={form.password} type=\"password\"\r\n                                      placeholder=\"Password\"/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"btn\" type=\"submit\">Login</Button>\r\n                </Form>\r\n\r\n            </div>\r\n        )\r\n    } else if (id === \"register\") {\r\n        return (\r\n\r\n            <div className=\"auth\">\r\n                <div className=\"auth-title\">\r\n                    <div><h3>Register</h3></div>\r\n                    <div><Link to=\"/auth/login\">Have an account?</Link></div>\r\n                </div>\r\n                {message.message\r\n                && <Alert variant={!message.error ? 'success' : 'danger'} onClose={() => setMessage({error: null, message:null})} dismissible>\r\n                    <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n                    <p>\r\n                        {message.message}\r\n                    </p>\r\n                </Alert>\r\n                }\r\n                <Form action=\"\" onSubmit={registerHandler}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control name=\"email\" onChange={changeHandler} value={form.email} type=\"email\"\r\n                                      placeholder=\"Enter email\"/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name=\"password\" onChange={changeHandler} value={form.password} type=\"password\"\r\n                                      placeholder=\"Password\"/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"btn\" type=\"submit\">Register</Button>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}