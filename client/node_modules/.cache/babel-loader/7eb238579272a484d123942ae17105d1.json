{"ast":null,"code":"import { authAPI } from \"../Api/api\";\nconst storageName = 'userData';\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\nconst DELETE_USER_DATA = \"DELETE_USER_DATA\";\nlet initialState = {\n  userId: null,\n  token: null,\n  isAuth: false,\n  email: null,\n  login: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.payload\n        };\n      }\n\n    case DELETE_USER_DATA:\n      {\n        return { ...state,\n          userId: null,\n          email: null,\n          login: null,\n          isAuth: false,\n          token: null\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (auth, userId, email, login) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    isAuth: auth,\n    email,\n    login\n  }\n});\nexport const deleteUserData = () => ({\n  type: DELETE_USER_DATA\n});\nexport const registerUser = (em, password) => async dispatch => {\n  try {\n    let response = await authAPI.register(em, password);\n    console.log(response);\n  } catch (e) {\n    return {\n      message: e.response.data.message,\n      error: true\n    };\n  }\n};\nexport const loginUser = (em, password) => async dispatch => {\n  try {\n    let response = await authAPI.login(em, password);\n    let {\n      token,\n      userId,\n      email\n    } = response.data;\n    localStorage.setItem(\"token\", token);\n    dispatch(setUserData(true, userId, email));\n    return {\n      message: response.data.message,\n      error: false\n    };\n  } catch (e) {\n    return {\n      message: e.response.data.message,\n      error: true\n    };\n  }\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Redux/auth-reducer.js"],"names":["authAPI","storageName","SET_USER_DATA","DELETE_USER_DATA","initialState","userId","token","isAuth","email","login","authReducer","state","action","type","payload","setUserData","auth","deleteUserData","registerUser","em","password","dispatch","response","register","console","log","e","message","data","error","loginUser","localStorage","setItem"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAG,UAApB;AACA,MAAMC,aAAa,GAAG,oBAAtB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,MAAM,EAAE,KAHO;AAIfC,EAAAA,KAAK,EAAE,IAJQ;AAKfC,EAAAA,KAAK,EAAE;AALQ,CAAnB;;AAWA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGS,KADA;AAEH,aAAGC,MAAM,CAACE;AAFP,SAAP;AAIH;;AACD,SAAKX,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGQ,KADA;AAEHN,UAAAA,MAAM,EAAE,IAFL;AAEWG,UAAAA,KAAK,EAAE,IAFlB;AAEwBC,UAAAA,KAAK,EAAE,IAF/B;AAEqCF,UAAAA,MAAM,EAAE,KAF7C;AAEoDD,UAAAA,KAAK,EAAE;AAF3D,SAAP;AAIH;;AACD;AAAS,aAAOK,KAAP;AAbb;AAeH,CAhBD;;AAmBA,OAAO,MAAMI,WAAW,GAAG,CAACC,IAAD,EAAOX,MAAP,EAAeG,KAAf,EAAsBC,KAAtB,MAAiC;AACxDI,EAAAA,IAAI,EAAEX,aADkD;AACnCY,EAAAA,OAAO,EAAE;AAACT,IAAAA,MAAD;AAASE,IAAAA,MAAM,EAAES,IAAjB;AAAuBR,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B;AAD0B,CAAjC,CAApB;AAIP,OAAO,MAAMQ,cAAc,GAAG,OAAO;AACjCJ,EAAAA,IAAI,EAAEV;AAD2B,CAAP,CAAvB;AAIP,OAAO,MAAMe,YAAY,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB,MAAOC,QAAP,IAAoB;AAC9D,MAAI;AACA,QAAIC,QAAQ,GAAG,MAAMtB,OAAO,CAACuB,QAAR,CAAiBJ,EAAjB,EAAqBC,QAArB,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,GAHD,CAGE,OAAOI,CAAP,EAAU;AACR,WAAO;AAACC,MAAAA,OAAO,EAAED,CAAC,CAACJ,QAAF,CAAWM,IAAX,CAAgBD,OAA1B;AAAmCE,MAAAA,KAAK,EAAE;AAA1C,KAAP;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,SAAS,GAAG,CAACX,EAAD,EAAKC,QAAL,KAAkB,MAAOC,QAAP,IAAoB;AAC3D,MAAI;AACA,QAAIC,QAAQ,GAAG,MAAMtB,OAAO,CAACS,KAAR,CAAcU,EAAd,EAAkBC,QAAlB,CAArB;AACA,QAAI;AAACd,MAAAA,KAAD;AAAQD,MAAAA,MAAR;AAAgBG,MAAAA;AAAhB,QAAyBc,QAAQ,CAACM,IAAtC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B1B,KAA9B;AACAe,IAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,EAAOV,MAAP,EAAeG,KAAf,CAAZ,CAAR;AACA,WAAO;AAACmB,MAAAA,OAAO,EAAEL,QAAQ,CAACM,IAAT,CAAcD,OAAxB;AAAiCE,MAAAA,KAAK,EAAE;AAAxC,KAAP;AACH,GAND,CAMC,OAAOH,CAAP,EAAU;AACP,WAAO;AAACC,MAAAA,OAAO,EAAED,CAAC,CAACJ,QAAF,CAAWM,IAAX,CAAgBD,OAA1B;AAAmCE,MAAAA,KAAK,EAAE;AAA1C,KAAP;AACH;AACJ,CAVM;AAgBP,eAAenB,WAAf","sourcesContent":["import {authAPI} from \"../Api/api\";\r\n\r\nconst storageName = 'userData'\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\"\r\nconst DELETE_USER_DATA = \"DELETE_USER_DATA\"\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    token: null,\r\n    isAuth: false,\r\n    email: null,\r\n    login: null,\r\n}\r\n\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case DELETE_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                userId: null, email: null, login: null, isAuth: false, token: null\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const setUserData = (auth, userId, email, login) => ({\r\n    type: SET_USER_DATA, payload: {userId, isAuth: auth, email, login}\r\n})\r\n\r\nexport const deleteUserData = () => ({\r\n    type: DELETE_USER_DATA\r\n})\r\n\r\nexport const registerUser = (em, password) => async (dispatch) => {\r\n    try {\r\n        let response = await authAPI.register(em, password)\r\n        console.log(response)\r\n    } catch (e) {\r\n        return {message: e.response.data.message, error: true}\r\n    }\r\n}\r\n\r\nexport const loginUser = (em, password) => async (dispatch) => {\r\n    try {\r\n        let response = await authAPI.login(em, password)\r\n        let {token, userId, email} = response.data\r\n        localStorage.setItem(\"token\", token)\r\n        dispatch(setUserData(true, userId, email ))\r\n        return {message: response.data.message, error: false}\r\n    }catch (e) {\r\n        return {message: e.response.data.message, error: true}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}