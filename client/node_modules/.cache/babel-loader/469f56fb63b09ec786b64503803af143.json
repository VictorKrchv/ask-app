{"ast":null,"code":"import { questionsAPI } from \"../Api/api\";\nlet initialState = {\n  question: {\n    title: null,\n    text: null,\n    likes: null,\n    author: null,\n    date: null\n  },\n  comments: [{\n    author: \"author\",\n    date: new Date(2020, 2, 16, 14, 20, 1),\n    likes: 10,\n    text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\"\n  }]\n};\n\nconst questionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport const getQuestionData = id => async dispatch => {\n  try {\n    let response = await questionsAPI.getQuestion(id);\n    console.log(response);\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport default questionReducer;","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Redux/question-reducer.js"],"names":["questionsAPI","initialState","question","title","text","likes","author","date","comments","Date","questionReducer","state","action","type","getQuestionData","id","dispatch","response","getQuestion","console","log","e"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,YAA3B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,IADD;AAENC,IAAAA,IAAI,EAAE,IAFA;AAGNC,IAAAA,KAAK,EAAE,IAHD;AAINC,IAAAA,MAAM,EAAE,IAJF;AAKNC,IAAAA,IAAI,EAAE;AALA,GADK;AAQfC,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,MAAM,EAAE,QADZ;AAEIC,IAAAA,IAAI,EAAE,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAFV;AAGIJ,IAAAA,KAAK,EAAE,EAHX;AAIID,IAAAA,IAAI,EAAE;AAJV,GADM;AARK,CAAnB;;AAmBA,MAAMM,eAAe,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI;AAAS,aAAOF,KAAP;AADb;AAGH,CAJD;;AAOA,OAAO,MAAMG,eAAe,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACvD,MAAI;AACA,QAAIC,QAAQ,GAAG,MAAMjB,YAAY,CAACkB,WAAb,CAAyBH,EAAzB,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,GAHD,CAGC,OAAOI,CAAP,EAAU;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH;AACJ,CAPM;AAYP,eAAeX,eAAf","sourcesContent":["import {questionsAPI} from \"../Api/api\";\r\n\r\nlet initialState = {\r\n    question: {\r\n        title: null,\r\n        text: null,\r\n        likes: null,\r\n        author: null,\r\n        date: null,\r\n    },\r\n    comments: [\r\n        {\r\n            author: \"author\",\r\n            date: new Date(2020, 2, 16, 14, 20, 1),\r\n            likes: 10,\r\n            text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\"\r\n        },\r\n    ]\r\n}\r\n\r\n\r\nconst questionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const getQuestionData = (id) => async (dispatch) => {\r\n    try {\r\n        let response = await questionsAPI.getQuestion(id)\r\n        console.log(response)\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default questionReducer;"]},"metadata":{},"sourceType":"module"}