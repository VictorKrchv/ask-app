{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\QuestionPage\\\\QuestionPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport getData from \"../../utils/getData\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getQuestionData } from \"../../Redux/question-reducer\";\nimport { Question } from \"./Question\";\nimport { Answer } from \"./Answer\";\nexport const QuestionPage = React.memo(function QuestionPage(props) {\n  const dispatch = useDispatch();\n  const id = useParams().id;\n  useEffect(() => {\n    dispatch(getQuestionData(id));\n  }, [id]);\n  const question = useSelector(state => state.question.question);\n  const answers = useSelector(state => state.question.answers);\n  console.log(\"RENDER\");\n  const [value, setValue] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setValue('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    text: question.text,\n    title: question.title,\n    likes: question.likes,\n    author: question.author,\n    date: question.date,\n    answers: answers.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"question-form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Answer the question\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://via.placeholder.com/50\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    placeholder: \"Write your answer here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Send answer\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answers-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Answers(\", answers.length, \"):\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), answers.map(answer => {\n    return /*#__PURE__*/React.createElement(Answer, {\n      key: answer.id,\n      date: answer.date,\n      text: answer.text,\n      likes: answer.likes,\n      author: answer.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    });\n  })));\n});","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/QuestionPage/QuestionPage.js"],"names":["React","useEffect","useState","getData","useDispatch","useSelector","useParams","getQuestionData","Question","Answer","QuestionPage","memo","props","dispatch","id","question","state","answers","console","log","value","setValue","onSubmit","e","preventDefault","text","title","likes","author","date","length","target","map","answer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport getData from \"../../utils/getData\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport {getQuestionData} from \"../../Redux/question-reducer\";\r\nimport {Question} from \"./Question\";\r\nimport {Answer} from \"./Answer\";\r\n\r\nexport const QuestionPage = React.memo(function QuestionPage(props)  {\r\n\r\n    const dispatch = useDispatch()\r\n    const id = useParams().id\r\n\r\n    useEffect(() => {\r\n        dispatch(getQuestionData(id))\r\n    }, [id])\r\n\r\n    const question = useSelector(state => state.question.question)\r\n    const answers = useSelector(state => state.question.answers)\r\n    console.log(\"RENDER\")\r\n\r\n\r\n\r\n    const [value, setValue] = useState('')\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n\r\n            <Question text={question.text} title={question.title} likes={question.likes} author={question.author} date={question.date} answers={answers.length} />\r\n\r\n            <form action=\"\" className=\"question-form\" onSubmit={onSubmit}>\r\n                <div className=\"question-form__title\">\r\n                    <h3>Answer the question</h3>\r\n                </div>\r\n                <div className=\"question-form__content\">\r\n                    \r\n                    <div className=\"question-form__img\">\r\n                        <img src=\"https://via.placeholder.com/50\" alt=\"\"/>\r\n                    </div>\r\n                    \r\n                    <div className=\"question-form__input\" >\r\n                        <textarea type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Write your answer here\"/>\r\n                        <button className=\"btn\" type={\"submit\"}>Send answer</button>\r\n                    </div>\r\n                </div>\r\n               \r\n            </form>\r\n\r\n            <div className=\"answers\">\r\n                <div className=\"answers-title\">\r\n                    <h3>Answers({answers.length}):</h3>\r\n                </div>\r\n                <hr/>\r\n\r\n                {answers.map(answer => {\r\n                    return (\r\n                       <Answer key={answer.id} date={answer.date} text={answer.text} likes={answer.likes} author={answer.author} />\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}