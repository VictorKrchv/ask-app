{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\AskPage\\\\askPage.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { postQuestion } from \"../../Redux/questions-reducer\";\nimport { Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\nexport const AskPage = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({\n    text: '',\n    title: ''\n  });\n  const [message, setMessage] = useState({\n    error: null,\n    message: ''\n  });\n\n  const changeHandler = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSumbit = async e => {\n    e.preventDefault();\n    if (form.text === '' || form.title === '') return false;\n    let {\n      id,\n      message,\n      error\n    } = await dispatch(postQuestion(form.title, form.text));\n    if (error) return setMessage(message, error);\n    history.push(`/question/${id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ask-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Ask the question\"), message.message && /*#__PURE__*/React.createElement(Alert, {\n    variant: !message.error ? 'success' : 'danger',\n    onClose: () => setMessage({\n      error: null,\n      message: null\n    }),\n    dismissible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }\n  }, message.error ? /*#__PURE__*/React.createElement(Alert.Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 38\n    }\n  }, \"Oh snap! You got an error!\") : null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, message.message))), /*#__PURE__*/React.createElement(Form, {\n    action: \"\",\n    className: \"ask-form\",\n    onSubmit: onSumbit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"title\",\n    value: form.title,\n    onChange: changeHandler,\n    as: \"textarea\",\n    rows: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"text\",\n    value: form.text,\n    onChange: changeHandler,\n    as: \"textarea\",\n    rows: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/AskPage/askPage.js"],"names":["React","useState","Button","useDispatch","postQuestion","Form","useHistory","Alert","AskPage","history","dispatch","form","setForm","text","title","message","setMessage","error","changeHandler","e","target","name","value","onSumbit","preventDefault","id","push"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {postQuestion} from \"../../Redux/questions-reducer\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nexport const AskPage = () => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [form, setForm] = useState({\r\n        text: '',\r\n        title: ''\r\n    })\r\n    const [message, setMessage] = useState({\r\n        error: null,\r\n        message: ''\r\n    })\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n    const onSumbit = async (e) => {\r\n        e.preventDefault()\r\n        if (form.text === '' || form.title === '') return false\r\n        let {id, message, error} = await dispatch(postQuestion(form.title, form.text))\r\n        if (error) return setMessage(message, error)\r\n        history.push(`/question/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"ask\">\r\n            <div className=\"ask-title\">\r\n                <h1>Ask the question</h1>\r\n                {message.message\r\n                && <Alert variant={!message.error ? 'success' : 'danger'}\r\n                          onClose={() => setMessage({error: null, message: null})} dismissible>\r\n                    {message.error ? <Alert.Heading>Oh snap! You got an error!</Alert.Heading> : null}\r\n                    <p>\r\n                        {message.message}\r\n                    </p>\r\n                </Alert>\r\n                }\r\n            </div>\r\n\r\n            <Form action=\"\" className=\"ask-form\" onSubmit={onSumbit}>\r\n\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control name=\"title\" value={form.title} onChange={changeHandler} as=\"textarea\" rows=\"1\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Text</Form.Label>\r\n                    <Form.Control name=\"text\" value={form.text} onChange={changeHandler} as=\"textarea\" rows=\"4\"/>\r\n                </Form.Group>\r\n                <Button className=\"btn\" type={\"submit\"}>Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}