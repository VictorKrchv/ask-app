{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\QuestionPage\\\\QuestionPage.js\";\nimport React, { useState } from \"react\";\nexport const QuestionPage = () => {\n  let mS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\n  function getData(date) {\n    let now = new Date();\n\n    if (now - date < 86400000 * 2) {\n      let when = \"Today\";\n\n      if (now.getDay() !== date.getDay()) {\n        when = \"Yesterday\";\n      }\n\n      let hours = date.getHours();\n      if (hours < 10) hours = \"0\" + hours;\n      let minutes = date.getMinutes();\n      if (minutes < 10) minutes = \"0\" + minutes;\n      return `${when} at ` + hours + ':' + minutes;\n    } else if (now.getFullYear !== date.getFullYear()) {\n      return mS[date.getMonth()] + ' ' + date.getDate() + ' ' + date.getFullYear();\n    } else {\n      return mS[date.getMonth()] + ' ' + date.getDate();\n    }\n  }\n\n  const [answers, setAnswers] = useState([{\n    author: \"author\",\n    date: new Date(2020, 2, 16, 14, 20, 1),\n    likes: 10,\n    text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\"\n  }, {\n    author: \"author\",\n    date: new Date(2020, 2, 16, 14, 20, 1),\n    likes: 10,\n    text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\"\n  }, {\n    author: \"author\",\n    date: new Date(2020, 2, 16, 14, 20, 1),\n    likes: 10,\n    text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\"\n  }]);\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Title\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Author at \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  }, \"11:53\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"lorem ipsum lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsum lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsum lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsum lorem ipsumlorem ipsumlorem ipsumlorem ipsum\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Likes: 10\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Answers: 123\"))), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"question-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Answer the question\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://via.placeholder.com/50\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    placeholder: \"Write your answer here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Send answer\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answers-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Answers(3):\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), answers.map((answer, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers__item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers__item-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, answer.author, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 48\n      }\n    }, \" at \", getData(answer.date))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"answers__item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, answer.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answers__item-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, \"Likes: \", answer.likes)));\n  })));\n};","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/QuestionPage/QuestionPage.js"],"names":["React","useState","QuestionPage","mS","getData","date","now","Date","when","getDay","hours","getHours","minutes","getMinutes","getFullYear","getMonth","getDate","answers","setAnswers","author","likes","text","value","setValue","e","target","map","answer","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAE9B,MAAIC,EAAE,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,MAApC,EAA4C,MAA5C,EAAoD,KAApD,EAA2D,MAA3D,EAAmE,KAAnE,EAA0E,KAA1E,EAAiF,KAAjF,CAAT;;AACA,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,QAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;;AACA,QAAID,GAAG,GAAGD,IAAN,GAAa,WAAW,CAA5B,EAA+B;AAC3B,UAAIG,IAAI,GAAG,OAAX;;AACA,UAAIF,GAAG,CAACG,MAAJ,OAAiBJ,IAAI,CAACI,MAAL,EAArB,EAAmC;AAC/BD,QAAAA,IAAI,GAAG,WAAP;AACH;;AACD,UAAIE,KAAK,GAAGL,IAAI,CAACM,QAAL,EAAZ;AACA,UAAID,KAAK,GAAG,EAAZ,EAAgBA,KAAK,GAAG,MAAMA,KAAd;AAChB,UAAIE,OAAO,GAAGP,IAAI,CAACQ,UAAL,EAAd;AACA,UAAID,OAAO,GAAG,EAAd,EAAkBA,OAAO,GAAG,MAAMA,OAAhB;AAClB,aAAQ,GAAEJ,IAAK,MAAR,GAAgBE,KAAhB,GAAwB,GAAxB,GAA8BE,OAArC;AAEH,KAXD,MAWO,IAAIN,GAAG,CAACQ,WAAJ,KAAoBT,IAAI,CAACS,WAAL,EAAxB,EAA4C;AAC/C,aAAOX,EAAE,CAACE,IAAI,CAACU,QAAL,EAAD,CAAF,GAAuB,GAAvB,GAA6BV,IAAI,CAACW,OAAL,EAA7B,GAA8C,GAA9C,GAAoDX,IAAI,CAACS,WAAL,EAA3D;AACH,KAFM,MAEA;AACH,aAAOX,EAAE,CAACE,IAAI,CAACU,QAAL,EAAD,CAAF,GAAuB,GAAvB,GAA6BV,IAAI,CAACW,OAAL,EAApC;AACH;AACJ;;AAED,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,CACnC;AAEIkB,IAAAA,MAAM,EAAE,QAFZ;AAGId,IAAAA,IAAI,EAAE,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAHV;AAIIa,IAAAA,KAAK,EAAE,EAJX;AAKIC,IAAAA,IAAI,EAAE;AALV,GADmC,EAQnC;AACIF,IAAAA,MAAM,EAAE,QADZ;AAEId,IAAAA,IAAI,EAAE,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAFV;AAGIa,IAAAA,KAAK,EAAE,EAHX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GARmC,EAcnC;AACIF,IAAAA,MAAM,EAAE,QADZ;AAEId,IAAAA,IAAI,EAAE,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAFV;AAGIa,IAAAA,KAAK,EAAE,EAHX;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAdmC,CAAD,CAAtC;AAqBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADd,CAJJ,eAOI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gUAPJ,eAcI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAdJ,CADJ,eAqBI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,SAAS,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAC,gCAAT;AAA0C,IAAA,GAAG,EAAC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAMI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAEqB,KAA7B;AAAoC,IAAA,QAAQ,EAAGE,CAAD,IAAOD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV,CAA7D;AAA+E,IAAA,WAAW,EAAC,wBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CANJ,CAJJ,CArBJ,eAuCI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMKL,OAAO,CAACS,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAEA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,CAACR,MADZ,eACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWf,OAAO,CAACuB,MAAM,CAACtB,IAAR,CAAlB,CADnB,CADJ,eAII;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCsB,MAAM,CAACN,IAA1C,CAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcM,MAAM,CAACP,KAArB,CADJ,CALJ,CADJ;AAWH,GAZA,CANL,CAvCJ,CADJ;AA+DH,CA9GM","sourcesContent":["import React, {useState} from \"react\";\r\n\r\n\r\nexport const QuestionPage = () => {\r\n\r\n    let mS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n    function getData(date) {\r\n        let now = new Date()\r\n        if (now - date < 86400000 * 2) {\r\n            let when = \"Today\"\r\n            if (now.getDay() !== date.getDay()){\r\n                when = \"Yesterday\"\r\n            }\r\n            let hours = date.getHours()\r\n            if (hours < 10) hours = \"0\" + hours\r\n            let minutes = date.getMinutes()\r\n            if (minutes < 10) minutes = \"0\" + minutes\r\n            return `${when} at ` + hours + ':' + minutes\r\n\r\n        } else if (now.getFullYear !== date.getFullYear()) {\r\n            return mS[date.getMonth() ] + ' ' + date.getDate() + ' ' + date.getFullYear()\r\n        } else {\r\n            return mS[date.getMonth() ] + ' ' + date.getDate()\r\n        }\r\n    }\r\n\r\n    const [answers, setAnswers] = useState([\r\n        {\r\n\r\n            author: \"author\",\r\n            date: new Date(2020, 2, 16, 14, 20, 1),\r\n            likes: 10,\r\n            text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\"\r\n        },\r\n        {\r\n            author: \"author\",\r\n            date: new Date(2020, 2, 16, 14, 20, 1),\r\n            likes: 10,\r\n            text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\"\r\n        },\r\n        {\r\n            author: \"author\",\r\n            date: new Date(2020, 2, 16, 14, 20, 1),\r\n            likes: 10,\r\n            text: \"Lorem fsgdfsg dfg dfg fdg fdg fdg fdg fdgfdgfdgfd\",\r\n        },\r\n    ])\r\n    const [value, setValue] = useState('')\r\n\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            <div className=\"question-content\">\r\n                <div className=\"question-title\">\r\n                    <h3>Title</h3>\r\n                </div>\r\n                <div className=\"question-subtitle\">\r\n                    Author at <span>11:53</span>\r\n                </div>\r\n                <p className=\"question-text\">\r\n                    lorem ipsum lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsum\r\n                    lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsum\r\n                    lorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem ipsumlorem\r\n                    ipsumlorem ipsum\r\n                    lorem ipsumlorem ipsumlorem ipsumlorem ipsum\r\n                </p>\r\n                <div className=\"question-footer\">\r\n                    <span>Likes: 10</span>\r\n                    <span>Answers: 123</span>\r\n                </div>\r\n            </div>\r\n\r\n            <form action=\"\" className=\"question-form\">\r\n                <div className=\"question-form__title\">\r\n                    <h3>Answer the question</h3>\r\n                </div>\r\n                <div className=\"question-form__content\">\r\n                    \r\n                    <div className=\"question-form__img\">\r\n                        <img src=\"https://via.placeholder.com/50\" alt=\"\"/>\r\n                    </div>\r\n                    \r\n                    <div className=\"question-form__input\">\r\n                        <textarea type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Write your answer here\"/>\r\n                        <button className=\"btn\" >Send answer</button>\r\n                    </div>\r\n                </div>\r\n               \r\n            </form>\r\n\r\n            <div className=\"answers\">\r\n                <div className=\"answers-title\">\r\n                    <h3>Answers(3):</h3>\r\n                </div>\r\n                <hr/>\r\n\r\n                {answers.map((answer, index) => {\r\n                    return (\r\n                        <div className=\"answers__item\" key={index}>\r\n                            <div className=\"answers__item-title\">\r\n                                {answer.author}<span> at {getData(answer.date)}</span>\r\n                            </div>\r\n                            <p className=\"answers__item-text\">{answer.text}</p>\r\n                            <div className=\"answers__item-footer\">\r\n                                <span>Likes: {answer.likes}</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}