{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\WebstormProjects\\\\askProject\\\\client\\\\src\\\\Components\\\\QuestionPage\\\\QuestionPage.js\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getQuestionData } from \"../../Redux/question-reducer\";\nimport { Question } from \"./Question\";\nimport { AnswersList } from \"./Answers/AnswersList\";\nimport { QuestionForm } from \"./QuestionForm\";\nexport const QuestionPage = React.memo(function QuestionPage(props) {\n  const dispatch = useDispatch();\n  const id = useParams().id;\n  const fetchData = useCallback(() => {\n    dispatch(getQuestionData(id));\n  }, [dispatch]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const question = useSelector(state => state.question.question);\n  const answers = useSelector(state => state.question.answers);\n\n  const postComment = value => {\n    console.log(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    text: question.text,\n    title: question.title,\n    likes: question.likes,\n    author: question.author,\n    date: question.date,\n    answers: answers.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(QuestionForm, {\n    postComment: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AnswersList, {\n    answers: answers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/Viktor/WebstormProjects/askProject/client/src/Components/QuestionPage/QuestionPage.js"],"names":["React","useCallback","useEffect","useDispatch","useSelector","useParams","getQuestionData","Question","AnswersList","QuestionForm","QuestionPage","memo","props","dispatch","id","fetchData","question","state","answers","postComment","value","console","log","text","title","likes","author","date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAGV,KAAK,CAACW,IAAN,CAAW,SAASD,YAAT,CAAsBE,KAAtB,EAA6B;AAEhE,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,EAAE,GAAGT,SAAS,GAAGS,EAAvB;AAEA,QAAMC,SAAS,GAAGd,WAAW,CAAC,MAAM;AAChCY,IAAAA,QAAQ,CAACP,eAAe,CAACQ,EAAD,CAAhB,CAAR;AACH,GAF4B,EAE1B,CAACD,QAAD,CAF0B,CAA7B;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,QAAMC,QAAQ,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeA,QAAzB,CAA5B;AACA,QAAME,OAAO,GAAGd,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,OAAzB,CAA3B;;AAGA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,QAAQ,CAACO,IAAzB;AAA+B,IAAA,KAAK,EAAEP,QAAQ,CAACQ,KAA/C;AAAsD,IAAA,KAAK,EAAER,QAAQ,CAACS,KAAtE;AAA6E,IAAA,MAAM,EAAET,QAAQ,CAACU,MAA9F;AACU,IAAA,IAAI,EAAEV,QAAQ,CAACW,IADzB;AAC+B,IAAA,OAAO,EAAET,OAAO,CAACU,MADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAMI,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAET,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAQI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAaH,CAlC2B,CAArB","sourcesContent":["import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport {getQuestionData} from \"../../Redux/question-reducer\";\r\nimport {Question} from \"./Question\";\r\nimport {AnswersList} from \"./Answers/AnswersList\";\r\nimport {QuestionForm} from \"./QuestionForm\";\r\n\r\nexport const QuestionPage = React.memo(function QuestionPage(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const id = useParams().id\r\n\r\n    const fetchData = useCallback(() => {\r\n        dispatch(getQuestionData(id))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n\r\n    const question = useSelector(state => state.question.question)\r\n    const answers = useSelector(state => state.question.answers)\r\n\r\n\r\n    const postComment = (value) => {\r\n        console.log(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n\r\n\r\n            <Question text={question.text} title={question.title} likes={question.likes} author={question.author}\r\n                      date={question.date} answers={answers.length}/>\r\n\r\n            <QuestionForm postComment={postComment}/>\r\n\r\n            <AnswersList answers={answers}/>\r\n\r\n        </div>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}